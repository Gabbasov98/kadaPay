{"version":3,"sources":["a-global.js","b-header.js","c-sliders.js","d-filter.js","e-calc.js","i-file.js","n-modal.js","01_main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"../components/main.min.js","sourcesContent":["let body = document.querySelector(\"body\")\r\n\r\nlet rowActions = document.querySelectorAll(\".row-action\")\r\nrowActions.forEach(action => {\r\n    let btn = action.querySelector(\".row-action__btn\")\r\n    btn.onclick = function () {\r\n        action.classList.toggle(\"_open\")\r\n    }\r\n\r\n    document.addEventListener( 'click', (e) => {\r\n        const withinBoundaries = e.composedPath().includes(action);\r\n\r\n        if ( ! withinBoundaries ) {\r\n            if(action.classList.contains(\"_open\")){\r\n                action.classList.remove(\"_open\")\r\n            }\r\n        }\r\n    })\r\n})\r\n\r\nlet passFields = document.querySelectorAll(\".fg-pass\")\r\n\r\npassFields.forEach(field => {\r\n    let input = field.querySelector(\"input\")\r\n    let btn = field.querySelector(\".pass-toggle\")\r\n\r\n    btn.onclick = function () {\r\n        console.log(true)\r\n        if(btn.classList.contains(\"_active\")){\r\n            btn.classList.remove(\"_active\")\r\n            input.setAttribute(\"type\",\"password\")\r\n        }else{\r\n            btn.classList.add(\"_active\")\r\n            input.setAttribute(\"type\",\"text\")\r\n        }\r\n    }\r\n})\r\n","let header = document.querySelector(\".header\")\r\nlet toggleMenuButtons = document.querySelectorAll(\"._toggle-menu\")\r\n\r\ntoggleMenuButtons.forEach(btn => {\r\n    btn.onclick = function () {\r\n        header.classList.toggle(\"_open\")\r\n        body.classList.toggle(\"fixed-body\")\r\n    }\r\n})\r\n","function Sliders() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".slider\")\r\n    sliders.forEach((slider,index) => {\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n\r\n        SlidersArray[index] = new Swiper(`.slider[data-slider-id=\"${index}\"] .swiper-container`, {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 0,\r\n            watchSlidesProgress: true,\r\n            preventClicks :true,\r\n            a11y: false,\r\n            observer: true,\r\n            observeParents: true,\r\n            observeSlideChildren: true,\r\n\r\n            navigation: {\r\n                nextEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-next`,\r\n                prevEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-prev`,\r\n            },\r\n            pagination: {\r\n                el: `.slider[data-slider-id=\"${index}\"] .swiper-pagination`,\r\n                type: 'bullets',\r\n                clickable: true,\r\n            },\r\n        })\r\n    })\r\n}\r\n\r\nfunction gallery() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".gallery\")\r\n    sliders.forEach((slider,index) => {\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n        let gallery = {\r\n            mySwiper: {},\r\n            mySwiper2: {}\r\n        }\r\n\r\n        gallery.mySwiper = new Swiper(`.gallery[data-slider-id=\"${index}\"] .mySwiper`, {\r\n            spaceBetween: 0,\r\n            slidesPerView: \"auto\",\r\n            freeMode: true,\r\n            watchSlidesProgress: true,\r\n            direction: \"vertical\",\r\n            breakpoints: {\r\n                320: {\r\n                    direction: \"horizontal\",\r\n                },\r\n                992: {\r\n                    direction: \"vertical\",\r\n                }\r\n            }\r\n        });\r\n        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id=\"${index}\"] .mySwiper2`, {\r\n            spaceBetween: 0,\r\n            direction: \"vertical\",\r\n            loop: true,\r\n            navigation: {\r\n                nextEl: `.gallery[data-slider-id=\"${index}\"] .swiper-button-next`,\r\n                prevEl: `.gallery[data-slider-id=\"${index}\"] .swiper-button-prev`,\r\n            },\r\n            thumbs: {\r\n                swiper:  gallery.mySwiper,\r\n            },\r\n            breakpoints: {\r\n                320: {\r\n                    direction: \"horizontal\",\r\n                },\r\n                992: {\r\n                    direction: \"vertical\",\r\n                }\r\n            }\r\n        });\r\n\r\n        SlidersArray[index] = gallery\r\n    })\r\n\r\n}\r\n\r\n\r\nSliders()\r\ngallery()\r\n","let filterSelects = document.querySelectorAll(\".filter-select\")\r\nfilterSelects.forEach(select => {\r\n    let current = select.querySelector(\".filter-select__current\")\r\n    let options = select.querySelectorAll(\".filter-select__option input\")\r\n\r\n    current.onclick = function () {\r\n        select.classList.toggle(\"_open\")\r\n    }\r\n\r\n\r\n    document.addEventListener( 'click', (e) => {\r\n        const withinBoundaries = e.composedPath().includes(select);\r\n\r\n        if ( ! withinBoundaries ) {\r\n            if(select.classList.contains(\"_open\")){\r\n                select.classList.remove(\"_open\")\r\n            }\r\n        }\r\n    })\r\n\r\n    options.forEach(option => {\r\n        option.onchange = function () {\r\n            setCurrentValue()\r\n            select.classList.remove(\"_open\")\r\n        }\r\n    })\r\n\r\n    function setCurrentValue() {\r\n        let checkedOption = select.querySelector(\".filter-select__option input:checked\")\r\n\r\n        if(!checkedOption){\r\n            current.value = \"\"\r\n            select.classList.remove(\"_selected\")\r\n            return\r\n        }\r\n\r\n        let value = checkedOption.getAttribute(\"data-value\")\r\n        current.value = value\r\n        select.classList.add(\"_selected\")\r\n    }\r\n})\r\n","let filterSliders = document.querySelectorAll(\".range-block\")\r\n\r\nfilterSliders.forEach(slider => {\r\n    const rangeSlider = slider.querySelector(`.range-slider`)\r\n    const rangeOutput = slider.querySelector(`._output`)\r\n\r\n    let startValue = +slider.getAttribute(\"data-start\")\r\n    let min = +slider.getAttribute(\"data-min\")\r\n    let max = +slider.getAttribute(\"data-max\")\r\n\r\n    if (rangeSlider) {\r\n        noUiSlider.create(rangeSlider, {\r\n            start: startValue,\r\n            connect: [true,false],\r\n            step: 1,\r\n            range: {\r\n                'min': min,\r\n                'max': max\r\n            }\r\n        });\r\n    }\r\n\r\n    let sliderHandle = slider.querySelector(\".noUi-handle\")\r\n    console.log(sliderHandle)\r\n\r\n    rangeSlider.noUiSlider.on('update', function(values, handle) {\r\n        rangeOutput.innerHTML = Math.round(values[handle]).toLocaleString()\r\n        sliderHandle.setAttribute(\"data-value\",Math.round(values[handle]).toLocaleString())\r\n    })\r\n    const setRangeSlider = (i, value) => {\r\n        let array = [null, null];\r\n        array[i] = value;\r\n\r\n        rangeSlider.noUiSlider.set(array);\r\n    };\r\n})\r\n","let fileInput = document.querySelector(\"[data-upload-id='file-input']\")\r\n\r\nif(fileInput){\r\n    console.log(fileInput)\r\n    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');\r\n\r\n    upload.options.multiple = true\r\n\r\n    $(document).on('change', '.input-container input', function(e) {\r\n        $(this).parents(\".file-input\").addClass(\"_uploaded\")\r\n    })\r\n\r\n    $(document).on('click', '.image-preview-item-clear', function(e) {\r\n        let count = $(this).parents(\".file-input\").find(\".image-preview-item\").length\r\n        if(count === 1){\r\n            $(this).parents(\".file-input\").removeClass(\"_uploaded\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\n","let modalTogglers = document.querySelectorAll(\"[data-modal]\")\nlet modals = document.querySelectorAll(\".modal\")\n\nmodalTogglers.forEach(el => {\n    el.onclick = function () {\n        let modalId = el.getAttribute(\"data-modal\")\n        openModal(modalId)\n    }\n})\n\nfunction closeModals() {\n    modals.forEach(modal => {\n        modal.classList.remove(\"_active\")\n        body.classList.remove(\"fixed-body2\")\n    })\n}\n\nfunction openModal(modalId) {\n    closeModals()\n    let modal = document.querySelector(`#${modalId}`)\n    let closeButtons = modal.querySelectorAll(`._close-modal`)\n\n    modal.classList.add(\"_active\")\n    body.classList.add(\"fixed-body2\")\n\n\n    closeButtons.forEach(btn => {\n        btn.onclick = ()=> {\n            modal.classList.remove(\"_active\")\n            body.classList.remove(\"fixed-body2\")\n        }\n    })\n}\n\nvar getScrollBarSize = (function() {\n    var el = window.document.createElement('textarea'), style = {\n        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',\n        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',\n        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'\n    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;\n\n    for (var key in style) {\n        if (style.hasOwnProperty(key)) {\n            el.style[key] = style[key];\n        }\n    }\n\n    return function() {\n        var size = null;\n        if (support && window.document.body) {\n            window.document.body.appendChild(el);\n            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];\n            window.document.body.removeChild(el);\n        }\n\n        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);\n        return size;\n    };\n})();\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    fix100vh();\r\n    window.addEventListener('resize', () => {\r\n        fix100vh();\r\n        getScrollBarSize()\r\n    })\r\n\r\n    getScrollBarSize()\r\n\r\n    let localeRu = {\r\n        days: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n        daysShort: ['Вос', 'Пон', 'Вто', 'Сре', 'Чет', 'Пят', 'Суб'],\r\n        daysMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n        months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n        monthsShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n        today: 'Сегодня',\r\n        clear: 'Очистить',\r\n        dateFormat: 'dd.MM.yyyy',\r\n        timeFormat: 'HH:mm',\r\n        firstDay: 1\r\n    };\r\n\r\n    function parseDate(input) {\r\n        if(!input){\r\n            return ''\r\n        }\r\n        let parts = input.match(/(\\d+)/g);\r\n        return new Date(parts[2], parts[1]-1, parts[0]);\r\n    }\r\n\r\n    let dateInputs = document.querySelectorAll('.date-input input')\r\n    dateInputs.forEach(el => {\r\n        new AirDatepicker(el, {\r\n            locale: localeRu,\r\n            autoClose: true,\r\n            selectedDates: [parseDate(el.value)],\r\n            onSelect: () => {\r\n                $(\".date-input\").addClass(\"input-active\")\r\n            }\r\n        })\r\n    })\r\n})\r\n\r\nfunction fix100vh() {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n}\r\n"]}